version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: coaching_postgres_prod
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: coaching_system
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/database_schema.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - coaching_network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: coaching_redis_prod
    restart: unless-stopped
    networks:
      - coaching_network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.backend
    container_name: coaching_backend_prod
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=coaching_system
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REFRESH_TOKEN=${GOOGLE_REFRESH_TOKEN}
      - META_APP_ID=${META_APP_ID}
      - META_APP_SECRET=${META_APP_SECRET}
      - WHATSAPP_ACCESS_TOKEN=${WHATSAPP_ACCESS_TOKEN}
      - WEBHOOK_VERIFY_TOKEN=${WEBHOOK_VERIFY_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - ENVIRONMENT=production
    # ports:
    #   - "8001:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - coaching_network

volumes:
  postgres_data:

networks:
  coaching_network:
    driver: bridge

